<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.RunScriptInGlobalScope</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Run any script in the global scope even if the context is a scoped application. However the function requires full cross scope access configured for the sys_script_include table. Note that the script will be placed into a function body so you cannot assume that declared local variables will be valid after its execution.</description>
        <name>RunScriptInGlobalScope</name>
        <script><![CDATA[function RunScriptInGlobalScope(strScript, param1, param2, param3, param4, param5)
{
	function Debug(strText)
	{
		x_snc_devtools.Debug('RunScriptInGlobalScope '+strText);
	}
	function CreateTempScriptInclude(strName,strScript)
	{
		Debug('CreateTempScriptInclude');
		var grScriptInclude = new GlideRecord('sys_script_include');
		grScriptInclude.initialize();
		grScriptInclude.name = strName;
		grScriptInclude.sys_scope = 'global';
		grScriptInclude.access = 'public';
		grScriptInclude.active = true;
		grScriptInclude.script = strScript;
		grScriptInclude.api_name = 'global.'+strName;
		grScriptInclude.insert();
	}
	function DeleteTempScriptInclude(strName)
	{
		Debug('DeleteTempScriptInclude');
		grScriptInclude = new GlideRecord('sys_script_include');
		grScriptInclude.addQuery('name','=',strName);
		grScriptInclude.addQuery('sys_scope','=','global');
		grScriptInclude.query();
		while (grScriptInclude.next())
		{
			Debug('Deleting script include: '+grScriptInclude.sys_id);
			grScriptInclude.deleteRecord();
		}
	}
	
	
	var strName = 'DevTools_TemporaryFunction';

	strScript = 
		"function "+strName+"(param1,param2,param3,param4,param5)"
		+"{"
			+strScript
		+"}";

	CreateTempScriptInclude(strName,strScript);
	
	var vReturnValue = false;
	var TemporaryFunction = global.DevTools_TemporaryFunction;
	var strType = x_snc_devtools.GetType(TemporaryFunction);
	if (strType != 'function')
	{
		Debug('GetType(TemporaryFunction) returned: '+strType);
		vReturnValue = false;
	}
	else
	{
		Debug('BEFORE executing TemporaryFunction');
		var vReturnValue = TemporaryFunction(param1,param2,param3,param4,param5);
		Debug('AFTER executing TemporaryFunction');
	}

	DeleteTempScriptInclude(strName);
	return vReturnValue;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-11-30 10:24:01</sys_created_on>
        <sys_id>7303bde9db30a410ba15a35305961968</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>RunScriptInGlobalScope</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_7303bde9db30a410ba15a35305961968</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-11-30 10:48:51</sys_updated_on>
    </sys_script_include>
</record_update>
